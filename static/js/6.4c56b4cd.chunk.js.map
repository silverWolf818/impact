{"version":3,"sources":["views/articles/js/queryString/md.js","views/articles/js/queryString/caseContent.js","utils/queryString.js","views/articles/js/queryString/index.js","components/Code/index.js","components/Form/ZtextArea/index.js","layout/Article/index.js","components/CaseInput/index.js"],"names":["inputRef","React","createRef","CaseContent","useState","text","setText","useEffect","current","props","form","setFieldsValue","CaseInput","wrappedComponentRef","className","href","onClick","e","preventDefault","type","str","obj","decodeURIComponent","replace","_","k","v","URLSearchParams","entries","key","value","console","log","queryString","getFieldValue","JSON","stringify","role","Code","language","QueryString","Article","md","content","hljs","window","CodeBlock","setRef","bind","el","this","codeEl","highlightCode","highlightBlock","ref","PureComponent","ZtextArea","onChange","row","r","rows","target","Component","source","renderers","code","getFieldDecorator","createForm"],"mappings":"yIAAc,kpB,wBCKd,IAAMA,EAAWC,IAAMC,YAkCRC,MAhCf,WAAwB,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,KAmBnB,OAhBAC,qBAAU,WACFF,GACYL,EAASQ,QAAQC,MAAMC,KAC/BC,eAAe,CACfN,KAAM,uCAGhB,CAACA,IAUC,6BACI,kBAACO,EAAA,EAAD,CAAWC,oBAAqBb,IAChC,yBAAKc,UAAU,iBACX,uBAAGC,KAAK,cAAcC,QAXd,SAACC,GACjBA,EAAEC,iBACF,IACMb,ECtBd,SAAqBc,EAAKC,GACtB,IAAIC,EAAM,GACV,IAII,GAHa,IAATF,GACAG,mBAAmBF,GAAKG,QAAQ,sBAAsB,SAACC,EAAGC,EAAGC,GAAP,OAAaL,EAAII,GAAKC,KAEnE,IAATP,EAAY,CAAC,IAAD,uBACZ,YAA0B,IAAIQ,gBAAgBP,GAAKQ,UAAnD,+CAA+D,CAAC,IAAD,6BAArDC,EAAqD,KAAhDC,EAAgD,KAC3DT,EAAIQ,GAAOC,GAFH,mFAKhB,OAAOT,EACV,MAAOJ,GACJc,QAAQC,IAAIf,IDSCgB,CAAY,EADbjC,EAASQ,QAAQC,MAAMC,KACJwB,cAAc,SAC7C5B,EAAQ6B,KAAKC,UAAU/B,EAAK,KAAK,KAOmBgC,KAAK,SAASvB,UAAU,6BAApE,iBAGAT,EAAO,kBAACiC,EAAA,EAAD,CAAWR,MAAOzB,EAAMkC,SAAS,OAAS,OEvBlDC,UANf,WACI,OACI,kBAACC,EAAA,EAAD,CAASC,GAAIA,EAAIC,QAAS,kBAAC,EAAD,U,oGCJ5BC,EAAOC,OAAOD,KAEdE,E,YACF,WAAYrC,GAAQ,IAAD,8BACf,4CAAMA,KACDsC,OAAS,EAAKA,OAAOC,KAAZ,gBAFC,E,oEAKZC,GACHC,KAAKC,OAASF,I,0CAIdC,KAAKE,kB,2CAILF,KAAKE,kB,sCAILR,EAAKS,eAAeH,KAAKC,U,+BAIzB,OACI,6BACJ,0BAAMG,IAAKJ,KAAKH,OAAQjC,UAAS,mBAAcoC,KAAKzC,MAAM8B,WACvDW,KAAKzC,MAAMqB,Y,GA1BE7B,IAAMsD,eAiCfT,O,4FClCTU,G,uLAEQ,IAAD,EAC0BN,KAAKzC,MAA7BgD,EADF,EACEA,SAAU3B,EADZ,EACYA,MAAO4B,EADnB,EACmBA,IACpBC,EAAID,GAAY,EACpB,OACI,yBAAK5C,UAAU,cACX,8BAAU8C,KAAMD,EAAGF,SAAU,SAACxC,GAAD,OAAOwC,EAASxC,EAAE4C,OAAO/B,QAAQA,MAAOA,S,GAP7D7B,IAAM6D,YAafN,O,qDChBf,6CAmBef,IAhBf,SAAiBhC,GACb,OACI,yBAAKK,UAAU,qBACX,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,6BACX,kBAAC,IAAD,CAAUiD,OAAQtD,EAAMiC,GAAIsB,UAAW,CAACC,KAAMnB,QAElD,yBAAKhC,UAAU,mBACVL,EAAMkC,a,6GCRrB/B,E,iLACQ,IACCsD,EAAqBhB,KAAKzC,MAAMC,KAAhCwD,kBACP,OACI,6BAEQA,EAAkB,OAAlBA,CAA0B,kBAAC,IAAD,CAAWR,IAAKR,KAAKzC,MAAMiD,Y,GANjDzD,IAAM6D,WAafK,kBAAavD","file":"static/js/6.4c56b4cd.chunk.js","sourcesContent":["export default `\n### url查询字符串转换成对象\n\n1. 通过 \\`replace\\` 方法实现转换，代码如下：\n\n\\`\\`\\`js\nlet obj = {};\n\ndecodeURIComponent(str).replace(/([^?&=]+)=([^&]+)/g, (_, k, v) => obj[k] = v);\n\\`\\`\\`\n\n2. 通过 \\`new URLSearchParams\\` 方法实现转换，代码如下：\n\n\\`\\`\\`js\nlet obj = {};\n\nfor (let [key, value] of (new URLSearchParams(str).entries())) {\n    obj[key] = value;\n}\n\\`\\`\\`\n\n> 需要注意是 \\`new URLSearchParams\\` 需要较高版本的浏览器支持\n`;","import React, {useEffect, useState} from \"react\";\nimport CaseInput from \"@/components/CaseInput\";\nimport CodeBlock from \"@/components/Code\";\nimport { queryString } from \"@/utils/queryString\";\n\nconst inputRef = React.createRef();\n\nfunction CaseContent() {\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        if(!text){\n            const ref = inputRef.current.props.form;\n            ref.setFieldsValue({\n                text: \"?name=zzh&age=%E5%8C%97%E4%BA%AC\"\n            });\n        }\n    },[text]);\n\n    const onTransForm = (e) => {\n        e.preventDefault();\n        const ref = inputRef.current.props.form;\n        const text = queryString(2,ref.getFieldValue(\"text\"));\n        setText(JSON.stringify(text,null,2));\n    };\n\n    return (\n        <div>\n            <CaseInput wrappedComponentRef={inputRef}/>\n            <div className=\"z-btn-content\">\n                <a href=\"#javascript\" onClick={onTransForm} role=\"button\" className=\"z-button z-button-primary\">转换</a>\n            </div>\n            {\n                text ? <CodeBlock value={text} language=\"js\"/> : null\n            }\n        </div>\n    )\n}\n\nexport default CaseContent;","function queryString(type,str) {\n    let obj = {};\n    try {\n        if (type === 1) {\n            decodeURIComponent(str).replace(/([^?&=]+)=([^&]+)/g, (_, k, v) => obj[k] = v);\n        }\n        if (type === 2) {\n            for (let [key, value] of (new URLSearchParams(str).entries())) {\n                obj[key] = value;\n            }\n        }\n        return obj;\n    }catch (e) {\n        console.log(e);\n    }\n}\n\nexport {\n    queryString\n}","import React from \"react\";\nimport Article from \"@/layout/Article\";\nimport md from './md';\nimport CaseContent from \"./caseContent\";\nfunction QueryString() {\n    return (\n        <Article md={md} content={<CaseContent />}/>\n    )\n}\n\nexport default QueryString;","import React from \"react\";\n\nconst hljs = window.hljs;\n\nclass CodeBlock extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.setRef = this.setRef.bind(this)\n    }\n\n    setRef(el) {\n        this.codeEl = el\n    }\n\n    componentDidMount() {\n        this.highlightCode()\n    }\n\n    componentDidUpdate() {\n        this.highlightCode()\n    }\n\n    highlightCode() {\n        hljs.highlightBlock(this.codeEl)\n    }\n\n    render() {\n        return (\n            <pre>\n        <code ref={this.setRef} className={`language-${this.props.language}`}>\n          {this.props.value}\n        </code>\n      </pre>\n        )\n    }\n}\n\nexport default CodeBlock;","import React from \"react\";\nimport \"../index.less\";\n\nclass ZtextArea extends React.Component {\n\n    render() {\n        const {onChange, value, row} = this.props;\n        let r = row ? row : 8;\n        return (\n            <div className=\"z-textarea\">\n                <textarea rows={r} onChange={(e) => onChange(e.target.value)} value={value}/>\n            </div>\n        )\n    }\n}\n\nexport default ZtextArea;","import React from 'react';\nimport Markdown from \"react-markdown\";\nimport CodeBlock from '@/components/Code';\nfunction Article(props) {\n    return (\n        <div className=\"z-article-content\">\n            <div className=\"z-article-header\">标 题</div>\n            <div className=\"z-article-body\">\n                <div className=\"z-article-left z-markdown\">\n                    <Markdown source={props.md} renderers={{code: CodeBlock}}/>\n                </div>\n                <div className=\"z-article-right\">\n                    {props.content}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Article;","import React from \"react\";\nimport {createForm} from 'rc-form';\nimport ZtextArea from \"@/components/Form/ZtextArea\";\n\nclass CaseInput extends React.Component{\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div>\n                {\n                    getFieldDecorator(\"text\")(<ZtextArea row={this.props.row}/>)\n                }\n            </div>\n        )\n    }\n}\n\nexport default createForm()(CaseInput);"],"sourceRoot":""}