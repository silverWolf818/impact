{"version":3,"sources":["views/articles/js/judgmentType/md.js","views/articles/js/judgmentType/caseContent.js","views/articles/js/judgmentType/index.js","components/Code/index.js","components/Form/ZtextArea/index.js","layout/Article/index.js","components/CaseInput/index.js"],"names":["inputRef","React","createRef","CaseContent","useState","text","setText","useEffect","current","props","form","setFieldsValue","CaseInput","wrappedComponentRef","className","href","onClick","e","preventDefault","getFieldValue","role","Code","value","language","JudgmentType","Article","md","content","hljs","window","CodeBlock","setRef","bind","el","this","codeEl","highlightCode","highlightBlock","ref","PureComponent","ZtextArea","onChange","row","r","rows","target","Component","source","renderers","code","getFieldDecorator","createForm"],"mappings":"yIAAc,inE,wBCIRA,EAAWC,IAAMC,YAkCRC,MAhCf,WAAwB,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,KAmBnB,OAhBAC,qBAAU,WACFF,GACYL,EAASQ,QAAQC,MAAMC,KAC/BC,eAAe,CACfN,KAAM,UAGhB,CAACA,IAUC,6BACI,kBAACO,EAAA,EAAD,CAAWC,oBAAqBb,IAChC,yBAAKc,UAAU,iBACX,uBAAGC,KAAK,cAAcC,QAXd,SAACC,GACjBA,EAAEC,iBACF,IACMb,EADML,EAASQ,QAAQC,MAAMC,KAClBS,cAAc,QAC/Bb,EAAQD,IAO4Ce,KAAK,SAASN,UAAU,6BAApE,iBAGAT,EAAO,kBAACgB,EAAA,EAAD,CAAWC,MAAOjB,EAAMkB,SAAS,OAAS,OCtBlDC,UANf,WACI,OACI,kBAACC,EAAA,EAAD,CAASC,GAAIA,EAAIC,QAAS,kBAAC,EAAD,U,oGCJ5BC,EAAOC,OAAOD,KAEdE,E,YACF,WAAYrB,GAAQ,IAAD,8BACf,4CAAMA,KACDsB,OAAS,EAAKA,OAAOC,KAAZ,gBAFC,E,oEAKZC,GACHC,KAAKC,OAASF,I,0CAIdC,KAAKE,kB,2CAILF,KAAKE,kB,sCAILR,EAAKS,eAAeH,KAAKC,U,+BAIzB,OACI,6BACJ,0BAAMG,IAAKJ,KAAKH,OAAQjB,UAAS,mBAAcoB,KAAKzB,MAAMc,WACvDW,KAAKzB,MAAMa,Y,GA1BErB,IAAMsC,eAiCfT,O,4FClCTU,G,uLAEQ,IAAD,EAC0BN,KAAKzB,MAA7BgC,EADF,EACEA,SAAUnB,EADZ,EACYA,MAAOoB,EADnB,EACmBA,IACpBC,EAAID,GAAY,EACpB,OACI,yBAAK5B,UAAU,cACX,8BAAU8B,KAAMD,EAAGF,SAAU,SAACxB,GAAD,OAAOwB,EAASxB,EAAE4B,OAAOvB,QAAQA,MAAOA,S,GAP7DrB,IAAM6C,YAafN,O,qDChBf,6CAmBef,IAhBf,SAAiBhB,GACb,OACI,yBAAKK,UAAU,qBACX,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,6BACX,kBAAC,IAAD,CAAUiC,OAAQtC,EAAMiB,GAAIsB,UAAW,CAACC,KAAMnB,QAElD,yBAAKhB,UAAU,mBACVL,EAAMkB,a,4GCRrBf,E,iLACQ,IACCsC,EAAqBhB,KAAKzB,MAAMC,KAAhCwC,kBACP,OACI,6BAEQA,EAAkB,OAAlBA,CAA0B,kBAAC,IAAD,CAAWR,IAAKR,KAAKzB,MAAMiC,Y,GANjDzC,IAAM6C,WAafK,kBAAavC","file":"static/js/5.f14ee730.chunk.js","sourcesContent":["export default `\n### javascript类型判断\n\n#### 基本类型的判断：\n\n- 基本类型有 \\`str\\`、 \\`number\\`、 \\`boolean\\`、 \\`null\\`、 \\`undefined\\`、 \\`symbol\\` \n\n##### 使用\\`typeof\\`运算符\n\n\\`\\`\\`js\n// 字符串\ntypeof '' === 'string';\ntypeof 'bla' === 'string';\ntypeof \\`template literal\\` === 'string';\ntypeof '1' === 'string'; // 注意内容为数字的字符串仍是字符串\ntypeof (typeof 1) === 'string'; // typeof 总是返回一个字符串\ntypeof String(1) === 'string'; // String 将任意值转换为字符串，比 toString 更安全\n\n// 数值\ntypeof 37 === 'number';\ntypeof 3.14 === 'number';\ntypeof(42) === 'number';\ntypeof Math.LN2 === 'number';\ntypeof Infinity === 'number';\ntypeof NaN === 'number'; // 尽管它是 \"Not-A-Number\" (非数值) 的缩写\ntypeof Number(1) === 'number'; // Number 会尝试把参数解析成数值\n\ntypeof 42n === 'bigint';\n\n// 布尔值\ntypeof true === 'boolean';\ntypeof false === 'boolean';\ntypeof Boolean(1) === 'boolean'; // Boolean() 会基于参数是真值还是虚值进行转换\ntypeof !!(1) === 'boolean'; // 两次调用 ! (逻辑非) 操作符相当于 Boolean()\n\n// Undefined\ntypeof undefined === 'undefined';\ntypeof declaredButUndefinedVariable === 'undefined';\ntypeof undeclaredVariable === 'undefined';\n\n// Symbols\ntypeof Symbol() === 'symbol';\ntypeof Symbol('foo') === 'symbol';\ntypeof Symbol.iterator === 'symbol'; \n\n// Null无法使用typeof运算符\ntypeof null === 'object';\n\\`\\`\\`\n\n#### 引用数据类型的判断：\n\n##### 使用\\`Object.prototype.toString\\`方法\n\n\\`\\`\\`js\nconst toString = Object.prototype.toString;\n\ntoString.call({}) === '[object Object]';\n\ntoString.call([]) === '[object Array]';\n\\`\\`\\`\n`;","import React, {useEffect, useState} from \"react\";\nimport CaseInput from \"@/components/CaseInput\";\nimport CodeBlock from \"@/components/Code\";\n\nconst inputRef = React.createRef();\n\nfunction CaseContent() {\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        if(!text){\n            const ref = inputRef.current.props.form;\n            ref.setFieldsValue({\n                text: \"qwe\"\n            });\n        }\n    },[text]);\n\n    const onTransForm = (e) => {\n        e.preventDefault();\n        const ref = inputRef.current.props.form;\n        const text = ref.getFieldValue(\"text\");\n        setText(text);\n    };\n\n    return (\n        <div>\n            <CaseInput wrappedComponentRef={inputRef}/>\n            <div className=\"z-btn-content\">\n                <a href=\"#javascript\" onClick={onTransForm} role=\"button\" className=\"z-button z-button-primary\">转换</a>\n            </div>\n            {\n                text ? <CodeBlock value={text} language=\"js\"/> : null\n            }\n        </div>\n    )\n}\n\nexport default CaseContent;","import React from \"react\";\nimport Article from \"@/layout/Article\";\nimport md from './md';\nimport CaseContent from \"./caseContent\";\nfunction JudgmentType() {\n    return (\n        <Article md={md} content={<CaseContent />}/>\n    )\n}\n\nexport default JudgmentType;","import React from \"react\";\n\nconst hljs = window.hljs;\n\nclass CodeBlock extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.setRef = this.setRef.bind(this)\n    }\n\n    setRef(el) {\n        this.codeEl = el\n    }\n\n    componentDidMount() {\n        this.highlightCode()\n    }\n\n    componentDidUpdate() {\n        this.highlightCode()\n    }\n\n    highlightCode() {\n        hljs.highlightBlock(this.codeEl)\n    }\n\n    render() {\n        return (\n            <pre>\n        <code ref={this.setRef} className={`language-${this.props.language}`}>\n          {this.props.value}\n        </code>\n      </pre>\n        )\n    }\n}\n\nexport default CodeBlock;","import React from \"react\";\nimport \"../index.less\";\n\nclass ZtextArea extends React.Component {\n\n    render() {\n        const {onChange, value, row} = this.props;\n        let r = row ? row : 8;\n        return (\n            <div className=\"z-textarea\">\n                <textarea rows={r} onChange={(e) => onChange(e.target.value)} value={value}/>\n            </div>\n        )\n    }\n}\n\nexport default ZtextArea;","import React from 'react';\nimport Markdown from \"react-markdown\";\nimport CodeBlock from '@/components/Code';\nfunction Article(props) {\n    return (\n        <div className=\"z-article-content\">\n            <div className=\"z-article-header\">标 题</div>\n            <div className=\"z-article-body\">\n                <div className=\"z-article-left z-markdown\">\n                    <Markdown source={props.md} renderers={{code: CodeBlock}}/>\n                </div>\n                <div className=\"z-article-right\">\n                    {props.content}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Article;","import React from \"react\";\nimport {createForm} from 'rc-form';\nimport ZtextArea from \"@/components/Form/ZtextArea\";\n\nclass CaseInput extends React.Component{\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div>\n                {\n                    getFieldDecorator(\"text\")(<ZtextArea row={this.props.row}/>)\n                }\n            </div>\n        )\n    }\n}\n\nexport default createForm()(CaseInput);"],"sourceRoot":""}